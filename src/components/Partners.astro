---
export interface Partner {
	name: string;
	description: string;
	url: string;
}

export interface Props {
	partners: Partner[];
}

const { partners } = Astro.props;
---

<section class="partners-section">
	<div class="container">
		<div class="content-container">
			<h2 class="partners-title">$ ls</h2>
			<div class="partners-grid">
				{partners.map((partner) => (
					<a href={partner.url} target="_blank" rel="noopener noreferrer" class="partner-card">
						<div class="partner-content">
							<h3>{partner.name}</h3>
							<p>{partner.description}</p>
						</div>
						<div class="partner-arrow">â†’</div>
					</a>
				))}
			</div>
		</div>
	</div>
</section>

<style>
	.partners-section {
		padding: 4rem 0;
		background: var(--card-background);
		width: 90%;
		margin: 0 auto;
		border-radius: 5px;
		
	}

	.partners-title {
		text-align: left;
		color: #00ff00;
		font-family: 'IBM Plex Sans', sans-serif, 'Fira Code', monospace;
		margin-bottom: 2rem;
		font-size: 1.5rem;
		text-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
		position: relative;
		display: inline-block;
	}

	.partners-title::before {
		content: '';
		color: #00ff00;
		margin-right: 0.5rem;
		opacity: 0.8;
	}

	.partners-title::after {
		content: '_';
		color: #00ff00;
		animation: blink 1s infinite;
		margin-left: 0.2rem;
	}

	@keyframes blink {
		0%, 100% { opacity: 1; }
		50% { opacity: 0; }
	}

	.partners-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
	}

	.partner-card {
		background: var(--background-color);
		padding: 2rem;
		border-radius: 0.5rem;
		border: var(--neon-border);
		transition: all 0.3s ease;
		text-decoration: none;
		color: var(--text-color);
		display: flex;
		justify-content: space-between;
		align-items: center;
		overflow: hidden;
		position: relative;
	}

	.partner-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: linear-gradient(45deg, transparent, rgba(176, 38, 255, 0.05), transparent);
		transform: translateX(-100%);
		transition: transform 0.6s ease;
	}

	.partner-card:hover {
		transform: translateY(-5px);
		box-shadow: var(--accent-glow);
		background: var(--card-hover-bg);
	}

	.partner-card:hover::before {
		transform: translateX(100%);
	}

	.partner-content {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		justify-content: center;
		align-items: flex-start;
	}

	.partner-content h3 {
		color: var(--primary-color);
		margin-bottom: 0.5rem;
		font-family: 'IBM Plex Sans', sans-serif, 'Fira Code', monospace;
	}

	.partner-content p {
		color: var(--text-green);
		font-size: 0.9rem;
		line-height: 1.4;
	}

	.partner-arrow {
		font-family: 'IBM Plex Sans', sans-serif, 'Fira Code', monospace;
		margin-left: 1rem;
		font-size: 1.5rem;
		color: var(--primary-color);
		opacity: 0;
		transform: translateX(-10px);
		transition: all 0.3s ease;
	}

	.partner-card:hover .partner-arrow {
		opacity: 1;
		transform: translateX(0);
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.content-container {
		max-width: 800px;
		margin: 0 auto;
	}

	@media (max-width: 768px) {
		.partners-grid {
			grid-template-columns: 1fr;
		}
	}
</style>
