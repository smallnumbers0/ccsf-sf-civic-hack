---
const { id } = Astro.props;
---

<div id={id} class="modal">
    <div class="modal-overlay"></div>
    <div class="modal-container">
        <button class="close-button" aria-label="Close modal">Ã—</button>
        <div class="modal-content">
            <slot />
        </div>
    </div>
</div>

<style>
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1000;
    }

    .modal.active {
        display: block;
    }

    .modal-overlay {
        position: absolute;
        width: 100%;
        height: 100%;
        background: rgba(15, 23, 42, 0.9);
        backdrop-filter: blur(4px);
    }

    .modal-container {
        position: relative;
        width: 90%;
        max-width: 800px;
        max-height: 90vh;
        margin: 2rem auto;
        background: var(--card-background);
        border-radius: 8px;
        border: 1px solid var(--primary-color);
        box-shadow: 0 0 30px rgba(168, 85, 247, 0.2);
        overflow-y: auto;
        transform: translateY(-20px);
        opacity: 0;
        transition: all 0.3s ease;
    }

    .modal.active .modal-container {
        transform: translateY(0);
        opacity: 1;
    }

    .modal-content {
        padding: 2rem;
    }

    .close-button {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: none;
        color: var(--text-color);
        font-size: 2rem;
        cursor: pointer;
        width: 2rem;
        height: 2rem;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.3s ease;
    }

    .close-button:hover {
        color: var(--primary-color);
        transform: rotate(90deg);
    }

    @media (max-width: 768px) {
        .modal-container {
            width: 95%;
            margin: 1rem auto;
        }
    }
</style>

<script>
    class Modal {
        private modal: HTMLElement | null;
        private overlay: HTMLElement | null;
        private closeButton: HTMLElement | null;

        constructor(modalId: string) {
            this.modal = document.getElementById(modalId);
            this.overlay = this.modal ? this.modal.querySelector('.modal-overlay') : null;
            this.closeButton = this.modal ? this.modal.querySelector('.close-button') : null;
            this.setupEventListeners();
        }

        private setupEventListeners() {
            if (this.modal && this.overlay && this.closeButton) {
                this.overlay.addEventListener('click', () => this.close());
                this.closeButton.addEventListener('click', () => this.close());
                document.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape') this.close();
                });
            }
        }

        public open() {
            this.modal?.classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        public close() {
            this.modal?.classList.remove('active');
            document.body.style.overflow = '';
        }
    }

    document.querySelectorAll('[data-modal]').forEach(trigger => {
        const modalId = trigger.getAttribute('data-modal');
        if (modalId) {
            const modal = new Modal(modalId);
            trigger.addEventListener('click', () => modal.open());
        }
    });
</script> 